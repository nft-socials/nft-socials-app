/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  sepolia: {
    OnePostDaily: {
      address:
        "0x3feccb100b5627b1ce50e402313db5857097b6e587d48133764eb05696a0cba",
      abi: [
        {
          type: "impl",
          name: "OnePostDailyImpl",
          interface_name: "contracts::YourContractByteArray::IOnePostDaily",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::YourContractByteArray::Post",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
            },
            {
              name: "author",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "current_owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "content_hash",
              type: "core::byte_array::ByteArray",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
            },
            {
              name: "is_for_sale",
              type: "core::bool",
            },
            {
              name: "price",
              type: "core::integer::u256",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::YourContractByteArray::SellProposal",
          members: [
            {
              name: "id",
              type: "core::felt252",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
            },
            {
              name: "seller",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "buyer",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "price",
              type: "core::integer::u256",
            },
            {
              name: "expiration",
              type: "core::integer::u64",
            },
            {
              name: "is_active",
              type: "core::bool",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::YourContractByteArray::IOnePostDaily",
          items: [
            {
              type: "function",
              name: "create_post",
              inputs: [
                {
                  name: "content_hash",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "price",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "propose_sell",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
                {
                  name: "price",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "cancel_sell",
              inputs: [
                {
                  name: "proposal_id",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "buy_post",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_user_posts",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::YourContractByteArray::Post>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_sell_proposals",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::YourContractByteArray::SellProposal>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_all_posts",
              inputs: [
                {
                  name: "offset",
                  type: "core::integer::u32",
                },
                {
                  name: "limit",
                  type: "core::integer::u32",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::YourContractByteArray::Post>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_post_by_token_id",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "contracts::YourContractByteArray::Post",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "is_post_for_sale",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_post_price",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_all_posts_for_sale",
              inputs: [
                {
                  name: "offset",
                  type: "core::integer::u32",
                },
                {
                  name: "limit",
                  type: "core::integer::u32",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<contracts::YourContractByteArray::Post>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_user_sold_nfts",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::integer::u256>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "name",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "symbol",
              inputs: [],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "token_uri",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::byte_array::ByteArray",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "owner_of",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "balance_of",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "approve",
              inputs: [
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_approved",
              inputs: [
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_approval_for_all",
              inputs: [
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "approved",
                  type: "core::bool",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "is_approved_for_all",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "operator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_from",
              inputs: [
                {
                  name: "from",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "to",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "token_id",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "strk_token_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::PostCreated",
          kind: "struct",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "author",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "content_hash",
              type: "core::byte_array::ByteArray",
              kind: "data",
            },
            {
              name: "price",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::PostListedForSale",
          kind: "struct",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "seller",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "price",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::SellProposed",
          kind: "struct",
          members: [
            {
              name: "proposal_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "seller",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "buyer",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "price",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::SellCancelled",
          kind: "struct",
          members: [
            {
              name: "proposal_id",
              type: "core::felt252",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::PostSold",
          kind: "struct",
          members: [
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
            {
              name: "seller",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "buyer",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "price",
              type: "core::integer::u256",
              kind: "data",
            },
            {
              name: "royalty_paid",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::Transfer",
          kind: "struct",
          members: [
            {
              name: "from",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "to",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::Approval",
          kind: "struct",
          members: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "approved",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "token_id",
              type: "core::integer::u256",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::ApprovalForAll",
          kind: "struct",
          members: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "operator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "approved",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::YourContractByteArray::OnePostDaily::Event",
          kind: "enum",
          variants: [
            {
              name: "PostCreated",
              type: "contracts::YourContractByteArray::OnePostDaily::PostCreated",
              kind: "nested",
            },
            {
              name: "PostListedForSale",
              type: "contracts::YourContractByteArray::OnePostDaily::PostListedForSale",
              kind: "nested",
            },
            {
              name: "SellProposed",
              type: "contracts::YourContractByteArray::OnePostDaily::SellProposed",
              kind: "nested",
            },
            {
              name: "SellCancelled",
              type: "contracts::YourContractByteArray::OnePostDaily::SellCancelled",
              kind: "nested",
            },
            {
              name: "PostSold",
              type: "contracts::YourContractByteArray::OnePostDaily::PostSold",
              kind: "nested",
            },
            {
              name: "Transfer",
              type: "contracts::YourContractByteArray::OnePostDaily::Transfer",
              kind: "nested",
            },
            {
              name: "Approval",
              type: "contracts::YourContractByteArray::OnePostDaily::Approval",
              kind: "nested",
            },
            {
              name: "ApprovalForAll",
              type: "contracts::YourContractByteArray::OnePostDaily::ApprovalForAll",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x124a67bfb6a2214b6bddb3dfe78b671df7544bbbe6948b51a1d4343090a4bcb",
    },
  },
} as const;

export default deployedContracts;
